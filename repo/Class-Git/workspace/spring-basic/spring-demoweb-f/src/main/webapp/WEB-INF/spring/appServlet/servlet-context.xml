<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- http://.../resources 로 요청이 오면 DispatcherServlet을 거치지 말고 직접 다운로드  -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Controller를 따로 만들지 않고 View로 연결하는 설정  -->
	<view-controller path="/" view-name="home" />
	<view-controller path="/home.action" view-name="home" />
	
	<!-- apache commons fileupload component와 spring framework를 연결해 주는 클래스 -->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/board/**"/>
			<beans:bean class="com.demoweb.interceptor.AuthInterceptor" />
		</interceptor>
	</interceptors>
	
	<beans:bean id="messageSource"
				class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>message.message</beans:value>
			</beans:list>
		</beans:property>			
	</beans:bean>
	
	<!--
	<beans:bean id="logger" class="com.demoweb.aop.Logger" /> 
	<aop:config>
		<aop:aspect ref="logger">
			<aop:pointcut id="board_pointcut" expression="within(com.demoweb..*.Board*)" />
			<aop:pointcut id="account_pointcut" expression="execution(* com.demoweb..*.*(..))" />
			
			<aop:before method="logBefore" pointcut-ref="board_pointcut" />
			<aop:before method="logAfter" pointcut-ref="account_pointcut" />
		</aop:aspect>	
	</aop:config>
	-->
	<aop:aspectj-autoproxy />
	
	<context:component-scan base-package="com.demoweb.controller" />
	<context:component-scan base-package="com.demoweb.aop" />
	
	
</beans:beans>










