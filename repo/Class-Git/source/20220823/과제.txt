[ 과제 1 ]

-- 전체 직원 보기
select * from employees;

-- 직원검색 (번호로 검색)
select * from employees where emp_no = 10001;

-- 직원검색 (이름으로 검색 - 부분일치)
select * from employees where lower(first_name) like '%geo%' or lower(last_name) like '%geo%';

-- 직원상세검색 (이름, 성별, 입사년도)
select * from employees where (lower(first_name) like '%geo%' or lower(last_name) like '%geo%') and gender = 'M' and year(hire_date) = 1986;

-- 전체 부서 보기
SELECT * FROM departments;

-- 부서별 직원 검색 (현직) 
SELECT e.*
FROM employees e, dept_emp de, departments d
WHERE e.emp_no = de.emp_no and d.dept_no = de.dept_no and de.to_date = '9999-01-01' and d.dept_no = 'd005';


-- 직원의 부서 근무 이력 조회 ( 적합한 DTO 새로 만들기 )
SELECT e.first_name, e.last_name, de.from_date, de.to_date, d.dept_name
FROM employees e, dept_emp de, departments d
WHERE e.emp_no = de.emp_no and d.dept_no = de.dept_no and e.emp_no = 13254
order by de.from_date;

-- 부서의 현직 관리자 조회
select e.*
FROM employees e, dept_manager dm, departments d
WHERE e.emp_no = dm.emp_no and d.dept_no = dm.dept_no and dm.to_date = '9999-01-01' and d.dept_no = 'd005';

[ 과제 2 ]

연락처 관리 프로그램 데이터베이스 버전으로 변환

1. 테이블 만들기 (Contact 클래스는 DTO 클래스 역할을 하므로 Contact 클래스 참고, 단 no 컬럼은 자동 증가 컬럼으로 처리)

2. Dao 클래스 만들기

   - void insertContact(Contact contact) 메서드 구현 ( 데이터 삽입 구현 )

   - List<Contact> selectAllContact() 메서드 구현 ( 데이터 조회 구현 )

   - List<Contact> selectContactsByName(String name) 메서드 구현 ( 데이터 조회 구현 )


3. ContactManager 클래스 구현 변경

   - 생성자 기능 제거

   - selection.equals("9")의 save 기능 제거

   - selection.equals("1")의 기능에 데이터베이스 데이터 저장 기능 추가

   - selection.equals("4")의 기능에 데이터베이스 모든 데이터 조회 기능 추가

   - selection.equals("5")의 기능에 데이터베이스 데이터 이름으로 조회 기능 추가